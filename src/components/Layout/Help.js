import React, { useState } from 'react';
import { Container, Row, Col, Accordion, Card, Form, Button, InputGroup } from 'react-bootstrap';
import { Search, HelpCircle, ChevronRight, ChevronDown } from 'lucide-react';

const HelpPage = () => {
  const [searchQuery, setSearchQuery] = useState('');
  const [activeCategory, setActiveCategory] = useState(null);

  const helpCategories = [
    {
      title: 'ƒê·∫∑t Ch·ªó & Thanh To√°n',
      icon: 'üí≥',
      items: [
        {
          question: 'L√†m th·∫ø n√†o ƒë·ªÉ ƒë·∫∑t ch·ªó tr√™n EasyBooking?',
          answer: 'B·∫°n c√≥ th·ªÉ d·ªÖ d√†ng ƒë·∫∑t ch·ªó b·∫±ng c√°ch ch·ªçn ƒë·ªãa ƒëi·ªÉm, ng√†y, v√† s·ªë l∆∞·ª£ng kh√°ch. Sau ƒë√≥, ch·ªçn ch·ªó ∆∞ng √Ω v√† ti·∫øn h√†nh thanh to√°n an to√†n. Cung c·∫•p th√¥ng tin chi ti·∫øt nh∆∞ t√™n, email v√† ph∆∞∆°ng th·ª©c thanh to√°n c·ªßa b·∫°n ƒë·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒë·∫∑t ch·ªó. H·ªá th·ªëng s·∫Ω g·ª≠i m·ªôt email x√°c nh·∫≠n ngay khi ƒë·∫∑t ch·ªó th√†nh c√¥ng.'
        },
        {
          question: 'Ch√≠nh s√°ch h·ªßy ƒë·∫∑t ch·ªó nh∆∞ th·∫ø n√†o?',
          answer: 'M·ªói ch·ªó ·ªü c√≥ ch√≠nh s√°ch h·ªßy kh√°c nhau. B·∫°n c√≥ th·ªÉ xem chi ti·∫øt t·∫°i trang th√¥ng tin ch·ªó ·ªü tr∆∞·ªõc khi ƒë·∫∑t. Th√¥ng th∆∞·ªùng, b·∫°n c√≥ th·ªÉ h·ªßy mi·ªÖn ph√≠ trong v√≤ng 24h tr∆∞·ªõc khi ƒë·∫øn, nh∆∞ng s·∫Ω ph·∫£i tr·∫£ m·ªôt kho·∫£n ph√≠ n·∫øu h·ªßy sau th·ªùi gian ƒë√≥. ƒê·ªÉ h·ªßy ƒë·∫∑t ch·ªó, vui l√≤ng truy c·∫≠p v√†o trang qu·∫£n l√Ω ƒë∆°n h√†ng trong t√†i kho·∫£n c·ªßa b·∫°n.'
        },
        {
          question: 'C√≥ th·ªÉ thanh to√°n b·∫±ng h√¨nh th·ª©c n√†o?',
          answer: 'Ch√∫ng t√¥i h·ªó tr·ª£ thanh to√°n qua th·∫ª t√≠n d·ª•ng, chuy·ªÉn kho·∫£n ng√¢n h√†ng, v√≠ ƒëi·ªán t·ª≠ (Momo, ZaloPay, AirPay), v√† nhi·ªÅu h√¨nh th·ª©c thanh to√°n tr·ª±c tuy·∫øn kh√°c. C√°c giao d·ªãch thanh to√°n ƒë·ªÅu ƒë∆∞·ª£c m√£ h√≥a b·∫£o m·∫≠t cao ƒë·ªÉ ƒë·∫£m b·∫£o an to√†n cho th√¥ng tin c·ªßa b·∫°n.'
        },
        {
          question: 'Thanh to√°n ƒë√£ th√†nh c√¥ng nh∆∞ng t√¥i ch∆∞a nh·∫≠n ƒë∆∞·ª£c x√°c nh·∫≠n, ph·∫£i l√†m sao?',
          answer: 'Trong tr∆∞·ªùng h·ª£p b·∫°n ƒë√£ thanh to√°n nh∆∞ng ch∆∞a nh·∫≠n ƒë∆∞·ª£c x√°c nh·∫≠n ƒë·∫∑t ch·ªó, h√£y ki·ªÉm tra l·∫°i h·ªôp th∆∞ r√°c ho·∫∑c th∆∞ m·ª•c qu·∫£ng c√°o trong email. N·∫øu v·∫´n kh√¥ng th·∫•y, vui l√≤ng li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email support@easybooking.com ho·∫∑c s·ªë hotline ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ nhanh ch√≥ng.'
        }
      ]
    },
    {
      title: 'H·ªó Tr·ª£ Kh√°ch H√†ng',
      icon: 'üë•',
      items: [
        {
          question: 'L√†m sao ƒë·ªÉ li√™n h·ªá h·ªó tr·ª£?',
          answer: 'B·∫°n c√≥ th·ªÉ li√™n h·ªá v·ªõi ƒë·ªôi ng≈© h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i qua email support@easybooking.com ho·∫∑c hotline 1900-xxxx. Ch√∫ng t√¥i c≈©ng c√≥ ƒë·ªôi ng≈© h·ªó tr·ª£ tr·ª±c tuy·∫øn qua chat trong trang web, s·∫µn s√†ng gi·∫£i ƒë√°p th·∫Øc m·∫Øc c·ªßa b·∫°n b·∫•t c·ª© l√∫c n√†o.'
        },
        {
          question: 'Th·ªùi gian ph·∫£n h·ªìi nh∆∞ th·∫ø n√†o?',
          answer: 'Ch√∫ng t√¥i cam k·∫øt ph·∫£n h·ªìi trong v√≤ng 24h k·ªÉ t·ª´ khi nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu h·ªó tr·ª£. Trong tr∆∞·ªùng h·ª£p c·∫ßn th√™m th·ªùi gian ƒë·ªÉ gi·∫£i quy·∫øt v·∫•n ƒë·ªÅ ph·ª©c t·∫°p, ƒë·ªôi ng≈© c·ªßa ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n ƒë·ªÉ c·∫≠p nh·∫≠t ti·∫øn ƒë·ªô.'
        },
        {
          question: 'T√¥i c√≥ th·ªÉ y√™u c·∫ßu ho√†n ti·ªÅn khi g·∫∑p s·ª± c·ªë kh√¥ng?',
          answer: 'N·∫øu b·∫°n g·∫∑p s·ª± c·ªë li√™n quan ƒë·∫øn ch·∫•t l∆∞·ª£ng d·ªãch v·ª• ho·∫∑c kh√¥ng h√†i l√≤ng v·ªõi ch·ªó ·ªü, ch√∫ng t√¥i c√≥ ch√≠nh s√°ch ho√†n ti·ªÅn trong ph·∫°m vi 7 ng√†y k·ªÉ t·ª´ ng√†y check-in. Vui l√≤ng cung c·∫•p ƒë·∫ßy ƒë·ªß th√¥ng tin v√† l√Ω do khi y√™u c·∫ßu ho√†n ti·ªÅn ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ nhanh ch√≥ng.'
        },
        {
          question: 'C√≥ h·ªó tr·ª£ kh√°ch h√†ng 24/7 kh√¥ng?',
          answer: 'Ch√∫ng t√¥i h·ªó tr·ª£ kh√°ch h√†ng 24/7 qua c√°c k√™nh email v√† chat tr·ª±c tuy·∫øn. N·∫øu c√≥ b·∫•t k·ª≥ v·∫•n ƒë·ªÅ n√†o ph√°t sinh trong su·ªët chuy·∫øn ƒëi, b·∫°n c√≥ th·ªÉ li√™n h·ªá v·ªõi ch√∫ng t√¥i b·∫•t k·ª≥ l√∫c n√†o ƒë·ªÉ nh·∫≠n ƒë∆∞·ª£c s·ª± h·ªó tr·ª£ k·ªãp th·ªùi.'
        }
      ]
    },
    {
      title: 'T√†i Kho·∫£n & B·∫£o M·∫≠t',
      icon: 'üîí',
      items: [
        {
          question: 'L√†m sao ƒë·ªÉ t·∫°o t√†i kho·∫£n?',
          answer: 'B·∫•m v√†o n√∫t "ƒêƒÉng K√Ω" ·ªü g√≥c tr√™n c√πng, ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin nh∆∞ t√™n, email, s·ªë ƒëi·ªán tho·∫°i v√† m·∫≠t kh·∫©u. Sau khi ƒëƒÉng k√Ω, h·ªá th·ªëng s·∫Ω g·ª≠i email x√°c nh·∫≠n ƒë·∫øn h·ªôp th∆∞ c·ªßa b·∫°n, vui l√≤ng ki·ªÉm tra v√† x√°c nh·∫≠n ƒë·ªÉ ho√†n t·∫•t qu√° tr√¨nh t·∫°o t√†i kho·∫£n.'
        },
        {
          question: 'Ch√≠nh s√°ch b·∫£o m·∫≠t c·ªßa EasyBooking?',
          answer: 'Ch√∫ng t√¥i cam k·∫øt b·∫£o v·ªá th√¥ng tin c√° nh√¢n c·ªßa b·∫°n theo ti√™u chu·∫©n b·∫£o m·∫≠t qu·ªëc t·∫ø. M·ªçi th√¥ng tin giao d·ªãch v√† d·ªØ li·ªáu c√° nh√¢n c·ªßa b·∫°n ƒë·ªÅu ƒë∆∞·ª£c m√£ h√≥a v√† l∆∞u tr·ªØ an to√†n. Ch√∫ng t√¥i kh√¥ng chia s·∫ª th√¥ng tin c·ªßa b·∫°n v·ªõi b·∫•t k·ª≥ b√™n th·ª© ba n√†o m√† kh√¥ng c√≥ s·ª± ƒë·ªìng √Ω t·ª´ b·∫°n.'
        },
        {
          question: 'T√¥i ƒë√£ qu√™n m·∫≠t kh·∫©u, l√†m th·∫ø n√†o ƒë·ªÉ l·∫•y l·∫°i?',
          answer: 'N·∫øu b·∫°n qu√™n m·∫≠t kh·∫©u, h√£y nh·∫•p v√†o li√™n k·∫øt "Qu√™n m·∫≠t kh·∫©u" tr√™n trang ƒëƒÉng nh·∫≠p. Nh·∫≠p email m√† b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n v√† ch√∫ng t√¥i s·∫Ω g·ª≠i h∆∞·ªõng d·∫´n kh√¥i ph·ª•c m·∫≠t kh·∫©u t·ªõi email c·ªßa b·∫°n.'
        },
        {
          question: 'T√†i kho·∫£n c·ªßa t√¥i b·ªã kh√≥a, l√†m sao ƒë·ªÉ m·ªü kh√≥a?',
          answer: 'N·∫øu t√†i kho·∫£n c·ªßa b·∫°n b·ªã kh√≥a, h√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email support@easybooking.com. C√°c l√Ω do kh√≥a t√†i kho·∫£n c√≥ th·ªÉ l√† vi ph·∫°m c√°c ƒëi·ªÅu kho·∫£n d·ªãch v·ª• ho·∫∑c ph√°t hi·ªán h√†nh vi ƒë√°ng ng·ªù. ƒê·ªôi ng≈© h·ªó tr·ª£ c·ªßa ch√∫ng t√¥i s·∫Ω l√†m vi·ªác v·ªõi b·∫°n ƒë·ªÉ x√°c minh th√¥ng tin v√† m·ªü kh√≥a t√†i kho·∫£n.'
        }
      ]
    }
  ];
  

  const filteredCategories = helpCategories.filter(category => 
    category.items.some(item => 
      item.question.toLowerCase().includes(searchQuery.toLowerCase()) ||
      item.answer.toLowerCase().includes(searchQuery.toLowerCase())
    )
  );

  const toggleCategory = (index) => {
    setActiveCategory(activeCategory === index ? null : index);
  };

  return (
    <Container className="help-page py-5">
      <Row className="mb-5">
        <Col>
          <h1 className="text-center mb-4">Trung T√¢m Tr·ª£ Gi√∫p EasyBooking</h1>
          <InputGroup className="mx-auto" style={{ maxWidth: '600px' }}>
            <Form.Control
              type="text"
              placeholder="B·∫°n c·∫ßn tr·ª£ gi√∫p g√¨?"
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="rounded-pill pl-4"
            />
            <InputGroup.Text className="bg-transparent border-0">
              <Search color="#007bff" size={24} />
            </InputGroup.Text>
          </InputGroup>
        </Col>
      </Row>

      <Row>
        <Col md={4} className="mb-4">
          <Card className="border-0 shadow-sm">
            <Card.Body>
              <h5 className="mb-3">Danh M·ª•c Tr·ª£ Gi√∫p</h5>
              {helpCategories.map((category, index) => (
                <div 
                  key={index} 
                  className={`d-flex align-items-center p-3 mb-2 rounded cursor-pointer ${activeCategory === index ? 'bg-light' : ''}`}
                  onClick={() => toggleCategory(index)}
                >
                  <span className="mr-3 h3 mb-0">{category.icon}</span>
                  <span className="flex-grow-1">{category.title}</span>
                  {activeCategory === index ? <ChevronDown /> : <ChevronRight />}
                </div>
              ))}
            </Card.Body>
          </Card>
        </Col>

        <Col md={8}>
          <Accordion defaultActiveKey="0">
            {filteredCategories.map((category, catIndex) => (
              <Card key={catIndex} className="mb-3 border-0 shadow-sm">
                <Card.Header className="bg-white d-flex align-items-center">
                  <span className="h3 mr-3 mb-0">{category.icon}</span>
                  <h4 className="mb-0">{category.title}</h4>
                </Card.Header>
                <Card.Body>
                  {category.items.map((item, itemIndex) => (
                    <Accordion.Item 
                      key={itemIndex} 
                      eventKey={`${catIndex}-${itemIndex}`}
                      className="mb-2"
                    >
                      <Accordion.Header>{item.question}</Accordion.Header>
                      <Accordion.Body>{item.answer}</Accordion.Body>
                    </Accordion.Item>
                  ))}
                </Card.Body>
              </Card>
            ))}
          </Accordion>

          {filteredCategories.length === 0 && (
            <div className="text-center py-5">
              <HelpCircle size={64} color="#007bff" className="mb-3" />
              <p className="text-muted">Kh√¥ng t√¨m th·∫•y k·∫øt qu·∫£. H√£y th·ª≠ t·ª´ kh√≥a kh√°c.</p>
            </div>
          )}
        </Col>
      </Row>

      <Row className="mt-5">
        <Col className="text-center">
          <h4>V·∫´n c·∫ßn h·ªó tr·ª£?</h4>
          <p>Li√™n h·ªá v·ªõi ch√∫ng t√¥i qua email: support@easybooking.com</p>
          <Button variant="primary" className="rounded-pill px-4">
            G·ª≠i Y√™u C·∫ßu H·ªó Tr·ª£
          </Button>
        </Col>
      </Row>
    </Container>
  );
};

export default HelpPage;
